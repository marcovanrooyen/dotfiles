{
	// Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"JSDoc UseMutation": {
		"prefix": "/useMutation",
		"body": [
			"/** @type {import('@tanstack/react-query').UseMutationResult<$1, Error, $2, unknown>} */"
		],
		"description": "JSDoc for React Query useMutation"
	},
	"JSDoc UseQuery": {
		"prefix": "/useQuery",
		"body": [
			"/** @type {import('@tanstack/react-query').UseQueryResult<$1, Error>} */"
		],
		"description": "JSDoc for React Query useQuery"
	},
	"JSDoc UseState": {
		"prefix": "/useState",
		"body": [
			"/** @type {[${1:type}, React.Dispatch<React.SetStateAction<${1:type}>>]} */"
		],
		"description": "Type-safe useState with JSDoc"
	}
}